// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @unique @default(uuid())
  admin       Boolean?     @default(false)
  slug        String       @unique
  name        String
  email       String
  provider    String
  provider_id String
  points      Int?         @default(0)
  created_at  DateTime?
  Challenge   Challenge[]
  Submission  Submission[]
  Vote        Vote[]
  Comment     Comment[]
}

model Challenge {
  id          String       @id @unique @default(uuid())
  user        User         @relation(fields: [userId], references: [id])
  slug        String       @unique
  name        String?
  description String?      @db.Text
  content     String?      @db.Text
  biolerplate String?      @db.Text
  level       Int?
  created_at  DateTime?
  userId      String
  Test        Test[]
  Submission  Submission[]
  Comment     Comment[]
}

model Test {
  id          String    @id @unique @default(uuid())
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  name        String?
  inputs      Json?
  output      String?
  output_type String?
  challengeId String
}

model Submission {
  id            String    @id @unique @default(uuid())
  user          User      @relation(fields: [userId], references: [id])
  Challenge     Challenge @relation(fields: [challengeId], references: [id])
  code          String?   @db.Text
  complete      Boolean?  @default(false)
  complete_time Decimal?
  votes         Int?
  rank          Decimal?
  created_at    DateTime?
  userId        String
  challengeId   String
  Vote          Vote[]
  Comment       Comment[]
}

model Vote {
  id           String     @id @unique @default(uuid())
  user         User       @relation(fields: [userId], references: [id])
  submission   Submission @relation(fields: [submissionId], references: [id])
  vote         Int
  userId       String
  submissionId String
}

model Comment {
  id           String      @id @unique @default(uuid())
  user         User        @relation(fields: [userId], references: [id])
  challenge    Challenge   @relation(fields: [challengeId], references: [id])
  submission   Submission? @relation(fields: [submissionId], references: [id])
  content      String      @db.Text
  created_at   DateTime?
  userId       String
  challengeId  String
  submissionId String?
}
